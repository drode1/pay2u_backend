name: "Release to production"
on:
  release:
    types: [ published ]

jobs:
  Tests:
    if: ${{ !contains(github.event.compare, '.github/') }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        python-version: [ "3.11", "3.12" ]
        poetry-version: [ "1.7.1", "1.8.2" ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install library
        run: poetry install --no-interaction

  Docker:
    if: ${{ !contains(github.event.compare, '.github/') }}
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/production.Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/pay2u_backend:latest
          platforms: linux/amd64,linux/arm64

  deploy:
    runs-on: ubuntu-latest
    needs: Docker
    steps:
      - name: Executing remote ssh commands using password
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ./projects/pay2u_backend/
            sudo docker compose down
            sudo docker compose rm django
            sudo docker image rm ${{ secrets.DOCKER_USERNAME }}/pay2u_backend
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/pay2u_backend
            sudo docker compose up -d
            sudo docker compose exec django python manage.py migrate